package com.poc.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.poc.dao.JobDao;
import com.poc.model.Job;
import com.poc.model.SuccessResponse;

@Service
public class JobServiceImpl implements JobService {

	@Autowired
	private JobDao jobDao;
	SuccessResponse successResponse = new SuccessResponse();

	@Override
	public SuccessResponse createJob(Job job) {
		try {
			List<Job> jobList = new ArrayList<Job>();
			Job saveJob = jobDao.save(job);
			jobList.add(saveJob);
			if (saveJob != null) {
				successResponse.setStatusCode("200");
				successResponse.setStatusMessage("Job created successfully");
				successResponse.setJoblist(jobList);
				return successResponse;
			}
			else {
				successResponse.setStatusCode("422");
				successResponse.setStatusMessage("failed to create job");
				return successResponse;
			}
		} catch (Exception e) {
			successResponse.setStatusCode("422");
			successResponse.setStatusMessage(e.getMessage());
			return successResponse;
		}
	}

	@Override
	public SuccessResponse getJobById(int id) {
		List<Job> jobList = new ArrayList<>();
		try {
		 List<Job> findJobById = jobDao.findJobById(id);
		 if(findJobById!=null) {
			 successResponse.setStatusCode("200");
			 successResponse.setStatusMessage("record fetched successfully");
			 successResponse.setJoblist(findJobById);
			 return successResponse;
		 }
		 else {
			 successResponse.setStatusCode("200");
			 successResponse.setStatusMessage("record is not found");
			 successResponse.setJoblist(jobList);
			 return successResponse;
		 }
		} catch (Exception e) {
			 successResponse.setStatusCode("422");
			 successResponse.setStatusMessage(e.getMessage());
			 return successResponse;
		}
	}

	@Override
	public SuccessResponse getJobByType(String jobType) {
		List<Job> jobList = new ArrayList<>();
		try {
			 List<Job> findJobByType = jobDao.findJobByType(jobType);
			 if(findJobByType!=null) {
				 successResponse.setStatusCode("200");
				 successResponse.setStatusMessage("record fetched successfully");
				 successResponse.setJoblist(findJobByType);
				 return successResponse;
			 }
			 else {
				 successResponse.setStatusCode("200");
				 successResponse.setStatusMessage("record is not found");
				 successResponse.setJoblist(jobList);
				 return successResponse;
			 }
			} catch (Exception e) {
				 successResponse.setStatusCode("422");
				 successResponse.setStatusMessage(e.getMessage());
				 return successResponse;
			}
	}

	@Override
	public SuccessResponse getJobByExp(int exp) {
		
		List<Job> jobList = new ArrayList<>();
		try {
			 List<Job> findJobByExp = jobDao.findJobByExp(exp);
			 if(findJobByExp!=null) {
				 successResponse.setStatusCode("200");
				 successResponse.setStatusMessage("record fetched successfully");
				 successResponse.setJoblist(findJobByExp);
				 return successResponse;
			 }
			 else {
				 successResponse.setStatusCode("200");
				 successResponse.setStatusMessage("record is not found");
				 successResponse.setJoblist(jobList);
				 return successResponse;
			 }
			} catch (Exception e) {
				 successResponse.setStatusCode("422");
				 successResponse.setStatusMessage(e.getMessage());
				 return successResponse;
			}
	}

	@Override
	public SuccessResponse getJobByCountry(String country) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public SuccessResponse getJobByAvailability(String availability) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public SuccessResponse getJobBySkills(String skills) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public SuccessResponse getJobByLanguage(String language) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public SuccessResponse getJobByPayRate(int low, int high) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public SuccessResponse getalljobs() {
		// TODO Auto-generated method stub
		return null;
	}

}
